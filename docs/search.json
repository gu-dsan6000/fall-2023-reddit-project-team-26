[
  {
    "objectID": "business_questions.html",
    "href": "business_questions.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "This project will use the given Reddit data to explore how Reddit users view, react to, and analyze collegiate basketball. We will compare sentiments and use external datasets such as team records and injuries to better understand how Reddit users react to their team successes or failures.\nThis project will center around three different areas of analysis: exploratory data analysis, natural language processing (NLP), and machine learning. We expect these three different areas of analysis to display different areas of the dataset and allow us to answer a variety of questions about this data.\nWe will use the Reddit data to explore the differences in sentiment between collegiate basketball fans and how the fans of the top teams from 2021-2022 reacted over the course of the season. We chose to limit our data to 2021-2022 because we wanted to ensure that our data captured an entire basketball season. The collegiate season ranges from November to about March, so by taking our data from September 2021 to April 2022, we are able to ensure that we can capture the data from an entire basketball season.\n\n\nAlthough professional and collegiate basketball are very related, there are some key differences that we want to establish before engaging in any exploratory data analysis. We expect these differences to become apparent in some of our sentiment analysis, NLP, and even in the exploratory phase of this project.\nCollegiate Basketball: Collegiate basketball in the United States is regulated primarily by the National Collegiate Athletic Association (NCAA). For the purposes of this project, we will be focusing on NCAA division 1 (D1) college basketball. College basketball is sorted into conferences (which typically align across sports for schools), which determines most of each team’s scheduled opponents and the conference championship tournament. At the end of each season, there is a gigantic tournament to determine the college basketball champion, colloquially called March Madness. In March, 64 teams (plus four other teams who play a “play-in game”) compete in a single-elimination tournament to determine the champion for the season. These players are considered amateurs, i.e. they do not receive contracts, but each collegiate basketball player is eligible to receive sponsorships and advertisement revenues.\nPart of our analysis will by analyzing the r/CBB (college basketball) subreddit, but we will also be analyzing the r/jayhawks and r/tarheels, the two teams to make the finals for college basketball in 2022 (Kansas won!). This way, we can also track the sentiments of the fans of the two most successful college basketball teams across the course of the season on their championship runs.\n\n\n\n\nOver the course of this project, we aim to answer different data science questions. The first few questions will be exploratory data analysis, which we have presented for you here. The next questions will be on NLP and machine learning, which will vary in complexity and in which part of the data set they are analyzing. We aim to answer these questions through multiple visual avenues, including plots, graphs, and charts, and aim to expose some interesting trends in collegiate basketball over the course of the 2021-2022 season.\n\n\nBusiness Goal 1: Between the two top teams of 2021-2022 (UNC and Kansas) which has higher reddit engagement.\nTechnical Proposal: Use regular expressions to extract mentions of the UNC and Kansas basketball team from the College Basketball subreddit to determine which is more talked about. Additionally, compute the counts of comments and submissions by day in the respective subreddits of UNC and Kansas basketball to determine which days have the most engagement for each fanbase. Finally also compute a count of comments by day in the large College Basketball subreddit to determine high engagement days in the overall college basketball community.\nBusiness Goal 2: Determine how reddit activity ebbs and flows over the course of a collegiate basketball season. Construct visuals to aid in understanding how much reddit users post over the course of the 2022 season.\nTechnical Proposal: Group by date to determine the number of comments and submissions in the college basketball subreddit and visualize both of these time series plots. Compute the word count in each comment/submission and plot the average word count by day over the time period. Finally plot a heatmap comparing the count of comments on each day of week/hour of day combination to identify and weekly/daily cyclical trends.\nBusiness Goal 3: Explore how the subreddit page of the NCAA champion in 2022, the Kansas Jayhawks, varied over the course of the season. Identify any trends in post frequency or comment length that may correlate to on-the-court successes or failures.\nTechnical Proposal: Use trend analysis and count number of comments and comment lengths to determine excitement over the course of the CBB season. Correlate any major trends to outside data sets, including Jayhawks wins and losses or injuries of key players. Analyze any additional trends in activity over the course of the 2022 season to find any other additional results before entering into the NLP phase of the project.\nBusiness Goal 3.5: Explore how the subreddit page of the NCAA runner ups in 2022, the UNC Tarheels, varied over the course of the season. Identify any trends in post frequency or comment length that may correlate to on-the-court successes or failures.\nTechnical Proposal: Use trend analysis and count number of comments and comment lengths to determine excitement over the course of the CBB season. Correlate any major trends to outside data sets, including UNC wins and losses or major games. Analyze any additional trends in activity over the course of the 2022 season to find any other additional results before entering into the NLP phase of the project.\nBusiness Goal 4: Identify the teams that have the most engagement on the main college basketball subreddit.\nTechnical Proposal: Use grouping and sorting algorithms to find which college basketball teams are the most mentioned teams. Using key word searches we can identify mentions of these teams. Identify if these mentions ebb or flow over the course of the season.\n\n\n\nBusiness Goal 5: Rank CBB players in terms of popularity across subreddits. Determine if the popularity is “positive” or “negative”.\nTechnical Proposal: Use NLP techniques to identify which players are the most popular in collegiate basketball by analyzing how many times they are mentioned or are referred to in comments. Extract mentions of player names using NLP techniques and count frequency. Combine with sentiment scores to create a popularity index. Use sentiment analysis techniques to determine if this popularity is due to positive or negative sentiment. Compare trends in these players’ appearance in comments to external factors, such as on-the-court statistics or injuries.\nBusiness Goal 6: Understand how player transfers in CBB affect fan engagement on relevant subreddits.\nTechnical Proposal: Conduct time-series analysis of post and comment frequencies before and after trade announcements. Apply statistical tests to determine significance. Use sentiment analysis to determine how fans feel about each trade. Integrate external data sets to see if fan sentiment agrees with conventional wisdom on the success of trades.\nBusiness Goal 7: Determine how collegiate fan bases react after big wins and big losses. Identify volatility over the course of the season, especially for teams we know reach the championship.\nTechnical Proposal: Identify fan sentiment for two days following a “big win” or a “big loss”. A big win could be some definition such as by beating a team by 20 points, and a big loss could be some definition such as losing to a team by more than 20 points. Analyze how fans of championship-caliber teams react to victory and defeat. Use NLP techniques to identify any rivalries or particularly important games to fanbases.\nBusiness Goal 8: Determine if sentiment correlates to team success on CBB subreddits. Identify fan sentiment over the course of a championship-caliber season.\nTechnical Proposal: Use NLP techniques to conduct trend analysis on sentiment across individual subreddits for CBB teams. Identify how positive and negative sentiment fluxuate over the course of a season. Use NLP to identify additional trends around March and June, the time of the playoffs, and how fan sentiment changes (or does not change) during the postseason.\nBusiness Goal 9: Determine which teams are the most liked or most hated in college basketball.\nTechnical Proposal: Incorporate results of the EDA portion of most mentioned teams. Conduct NLP analysis to determine if these mentions are positive or negative. Expand analysis to surrounding comments and threads to understand which teams are generally viewed favorably or which are viewed negatively. Use external news sources to understand how fans view unlikely winners, such as “cinderella stories,” or losers, such as “upsets.”\n\n\n\nBusiness Goal 9: Assess if the sentiment on CBB subreddits can help predict game outcomes.\nTechnical Proposal: Build a machine learning model using historical game outcomes and pre-game subreddit sentiment as features. Use external data sets, such as season win/loss records, to create predictive model that incorporates pre-game sentiment. Test data on 2022-2023 season to determine accuracy of said model.\nBusiness Goal 10: Determine what do subreddits look like in the lead up to big games or big tournaments.\nTechnical Proposal: Start with postseason sentiment analysis, then use cluster modeling or some similar machine learning technique to identify important games throughout the course of the season. Correlate these important games to external factors, such as rivalries, injuries, or trades. Visualize results by grouping important games over the course of the regular season and post season.\nBusiness Goal 11: Assess if the Kansas Jayhawks or UNC Tar Heel subreddits more volatile throughout the season.\nTechnical Proposal: Compare NBA and CBB subreddits using a multitude of machine learning techniques to identify which have more varied reactions, posting tempos, or other factors. Identify which have a wider variety of types of post and poster over the course of a season. Determine if NBA fans or CBB fans are more volatile in their reaction timing, tempo, length, and frequency over the course of a season.\nBusiness Goal 12: Predict which college basketball players will become major NBA stars based on Reddit discussions.\nTechnical Proposal: Monitor mentions and sentiments around CBB players. Track those who enter the NBA and evaluate their performance using regression analysis against Reddit metrics. Use draft status and 2022-2023 NBA season statistics to verify these outcomes.\n\n\n\nWe initially conceptualized this project as a comparison of professional and collegiate basketball. When we began our initial data pulls of the reddit data, we found that this data would be too big and too unweildy to complete a project like this one. Below is our overview of professional basketball and our initial proposal.\nProfessional Basketball: Professional basketball in the United States is played in the National Basketball Association (NBA). The NBA has feeder leagues (such as the G League), and there are other international leagues as well. The NBA consists of 30 teams, most if not all of which have their own subreddits. Each NBA team has 15 players, in addition to two two-way contracts between the NBA and the G League. Each player in the NBA is paid via contract, and each are eligible for any advertising or sponsorship money that they pursue in addition to their contractual responsibilities.\nPart of our analysis would’ve been analyzing the r/NBA subreddit and also the r/bostonceltics and r/warriors subreddits, as those were the two teams to make the NBA finals in 2022 (the Golden State Warriors were the 2022 NBA champions). This way, we would’ve been able to track the sentiments of the two most successful teams in the NBA across the season.\n\n\n\n\n\n\nBased on our initial business goals, we think there are a few external datasets that could be relevant. Our primary dataset will likely be the weekly rankings of college basketball teams in the 2021-2022 season. We found that dataset here, and that dataset is uploaded as a csv in the /data folder. This dataset is the top 25 rankings of college basketball teams, as voted on by a predetermined committee. These rankings come out once a week and reflect the outcomes of all of the games from the week prior. This dataset would be relevant in each of our sections because it captures lots of national sentiments around how each team is performing and their performance relative to other teams week to week. We could likely use this information to capture how teams are performing objectively and compare that to sentiments on these subreddits.\nWe will also likely need to incorporate the daily or weekly schedule of college basketball games, found here. This schedule will allow us to take reddit sentiment or posting patterns and correlate that information to games played that day, week, or month.\nWe will also likely incorporate information from viewership data, such as from this website. This can help us find which games are highly anticipated and the games that are the most viewed, and thus likely the most commented on.\nOther potential datasets we could incorporate are injury reports, potentially the reports generated before every game. This could help capture things outside of the weekly rankings or scheduling that may affect poster sentiment or poster frequency.\nWe anticipate continuing to find and use external datasets throughout the course of this project.\n\n\n\nWe also created new variables to help with our exploratory data analysis. We created variables such as comment length and submission length (across the subreddits) to find the length of post.\nAdditionally, we created a new variable taking information from the poster’s username/avatar to extract information about the poster’s fandom. This will help contextualize the comments and submissions, giving us greater insights and avenues for analysis. Extracting data from the “title” of a post we also created a “game thread” indicator column which helps separate normal submissions to game specific threads. Additional variables we created are found throughout this analysis.\nWe plan to continue developing new variables as necessary throughout this project to capture other necessary information as we continue.\n\n\n\nFinally, we created a number of dummy variables to help with our exploratory data analysis and to continue to help with other phases of analysis. Some of these dummy variables include:\n- if a game thread was about a ranked matchup (Game Thread Posts Only)\n- if a certain team was mentioned in the comment/submission post \n- What time a game was played and what teams were playing (Game Thread Posts Only)\nThese dummy variables are found throughout our analysis here."
  },
  {
    "objectID": "project_eda_q3.html",
    "href": "project_eda_q3.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "For this portion of the project, we will attempt to answer the third question proposed in our original Business Goals:\nBusiness Goal 3: Explore how the subreddit page of the NCAA champion in 2022, the Kansas Jayhawks, varied over the course of the season. Identify any trends in post frequency or comment length that may correlate to on-the-court successes or failures.\nTechnical Proposal: Use trend analysis and count number of comments and comment lengths to determine excitement over the course of the CBB season. Correlate any major trends to outside data sets, including Jayhawks wins and losses or major games. Analyze any additional trends in activity over the course of the 2022 season to find any other additional results before entering into the NLP phase of the project.\nAs you will see throughout this exploration, this analysis began as only covering the r/jayhawks subreddit, but we expanded it to also include the r/tarheels subreddit as well. This initial glimpse into how these subreddits work will lead into other analyses as we continue. Thus, we effectively added the following business goal:\nBusiness Goal 3.5: Explore how the subreddit page of the NCAA runner ups in 2022, the UNC Tarheels, varied over the course of the season. Identify any trends in post frequency or comment length that may correlate to on-the-court successes or failures.\nTechnical Proposal: Use trend analysis and count number of comments and comment lengths to determine excitement over the course of the CBB season. Correlate any major trends to outside data sets, including UNC wins and losses or major games. Analyze any additional trends in activity over the course of the 2022 season to find any other additional results before entering into the NLP phase of the project.\n\n\nIn order to analyze these subreddits, we’ll begin by diving into the comment and submission frequency for r/jayhawks.\n\n\nCode\nfrom pyspark.sql.functions import *\njayhawk_comments = (\n    comments\n    .filter(col(\"subreddit\") == \"jayhawks\")\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n    .groupBy(\"year\", \"month\", \"day\")\n    .count()\n)\njayhawk_comments_df = jayhawk_comments.toPandas()\n\n\n\n\nCode\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\njayhawk_comments_df['date'] = pd.to_datetime(jayhawk_comments_df[['year', 'month', 'day']])\njayhawk_comments_df = jayhawk_comments_df.sort_values(by='date') \nplt.figure(figsize=(8, 6))\nplt.plot(jayhawk_comments_df['date'], jayhawk_comments_df['count'], marker='.', linestyle='-')\nplt.xlabel('Date')\nplt.ylabel('Count')\nplt.title('Comment Count by Day (r/jayhawks)')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 12, Finished, Available)\n\n\n\n\n\nThis shows us the comment frequency for r/jayhawks.\nThis showed us some interesting things right off the bat about this subreddit. First, the primary thing that sticks out about this graph is that by far and away, the most comments occur in late March and early April. This aligns perfectly with earlier hypotheses that the most interaction on this subreddit would be during the NCAA March Madness tournament.\nTaking this a step further, the Jayhawks won the NCAA Championship on 4 April 2022. This aligns perfect with the huge spike - which is likely that championship game. According to Forbes (https://www.forbes.com/sites/masonbissada/2022/04/05/kansas-unc-game-is-most-watched-ncaa-basketball-final-in-cable-tv-history/?sh=773024af1a0e), this was the most-watched NCAA final game in history, so this spike correlates nicely with that!\nThere is a general “buzz” about the Jayhawks primarily during the collegiate basketball season - November through April. Our data only includes the CBB season, but we can extrapolate from the near-zero comment rate in September that there is not much excitement around the team other than during the season - to include big recruiting commitments.\nBefore the season, fans (https://www.cjonline.com/story/sports/college/hawk-zone/2021/11/23/kansas-basketball-schedule-2021-2022-jayhawks-big-12-most-important-games-mizzou-border-war/8608871002/) identified a number of games that were must watches: December 11, December 21, January 1, January 22, January 29, among others. Although there were potentially smaller spikes in comments during these games, there were vastly outweighed by the increased rate of comments during the finals and the NCAA tournament.\nThis will help inform our analysis in the future: because the number of comments on this page was so much smaller than on the main r/CollegeBasketball page, our analysis may be more prescient taking Kansas mentions on that main page and using that information instead of focusing on this subreddit.\nLet’s do the same thing for submissions and see if we get a similar result.\n\n\nCode\njayhawk_submissions = (\n    submissions\n    .filter(col(\"subreddit\") == \"jayhawks\")\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n    .groupBy(\"year\", \"month\", \"day\")\n    .count()\n)\njayhawk_submissions_df = jayhawk_submissions.toPandas()\n\n\n\n\nCode\njayhawk_submissions_df['date'] = pd.to_datetime(jayhawk_submissions_df[['year', 'month', 'day']])\njayhawk_submissions_df = jayhawk_submissions_df.sort_values(by='date') \nplt.figure(figsize=(8, 6))\nplt.plot(jayhawk_submissions_df['date'], jayhawk_submissions_df['count'], marker='.', linestyle='-')\nplt.xlabel('Date')\nplt.ylabel('Count')\nplt.title('Submission Count by Day (r/jayhawks)')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 14, Finished, Available)\n\n\n\n\n\nOkay! Now we’ve completed the initial stages of our exploratory data analysis for r/jayhawks.\nThere were so few submissions on the page that the maximum number of submissions in one day was eight! This tells us a lot about how Jayhawk fans react - they don’t do it on this page! Maybe there is more interest on the larger page - maybe there is increased engagement there, and that is preferable for Jayhawk fans. We’ll be able to find that out in the next EDA question.\nWe are going to continue this analysis and also do the same thing for r/tarheels.\n\n\n\nIn order to analyze these subreddits, we’ll begin by diving into the comment and submission frequency for r/tarheels.\n\n\nCode\ntarheel_comments = (\n    comments\n    .filter(col(\"subreddit\") == \"jayhawks\")\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n    .groupBy(\"year\", \"month\", \"day\")\n    .count()\n)\ntarheel_comments_df = tarheel_comments.toPandas()\n\n\n\n\nCode\ntarheel_comments_df['date'] = pd.to_datetime(tarheel_comments_df[['year', 'month', 'day']])\ntarheel_comments_df = tarheel_comments_df.sort_values(by='date') \nplt.figure(figsize=(8, 6))\nplt.plot(tarheel_comments_df['date'], tarheel_comments_df['count'], marker='.', linestyle='-')\nplt.xlabel('Date')\nplt.ylabel('Count')\nplt.title('Comment Count by Day (r/tarheels)')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 16, Finished, Available)\n\n\n\n\n\nThat’s a good start! This is interesting to compare to the r/jayhawks analysis of before.\nThe commenting patterns and spike follow the same pattern as the r/jayhawks subreddit. There is minimal engagement before the tournament, with some excitement building in February and March. Then, during the main tournament and especially during the 4 April championship game, there is a huge spike in comments!\nA number of games were identified by fans (https://watchstadium.com/college-basketball-must-see-games-in-2021-22-10-27-2021/) as must-watch throughout the season. The following is an excerpt from the linked article about the games the fandom was most excited for:\n\nNorth Carolina at Duke, March 5 – It’ll be the swan song at Cameron for Mike Krzyzewski, and it comes, of course, against rival North Carolina. The atmosphere in this one will be insane. Coach K announced he will retire after this season, and his final home game is against the Tar Heels in the ACC regular-season finale. I can’t wait to see what the resale market looks like for this matchup.\nDuke vs. Kentucky, Nov. 9 in New York – This is Coach K vs. John Calipari for one final time in the Champions Classic, basically opening the college hoops season. Both come off disappointing campaigns, and both will have a chance to get some early momentum this year. It’ll also feature two of the top frosh in the country: Duke’s Paolo Banchero and Kentucky’s TyTy Washington.\nGonzaga vs. Duke, Nov. 26 in Las Vegas – Two of the best programs, and arguably the two best freshmen, go up against one another at T-Mobile Arena. The Zags have long and skilled 7-footer Chet Holmgren, while Duke will rely heavily on big, strong and athletic forward Paolo Banchero.\nGonzaga vs. UCLA, Nov. 23 in Las Vegas – A rematch of the Final Four matchup in which Jalen Suggs hit the memorable game-winning shot, and both are contenders to cut down the nets this year.\nTexas at Gonzaga, Nov. 13 – New Longhorns coach Chris Beard takes his team to Spokane and will face Drew Timme, Chet Holmgren and the top-ranked Zags. It’s a chance for Texas and all of Beard’s transfers to show they are for real.\nVillanova at UCLA, Nov. 12 – A matchup of two top-five teams out at Pauley Pavilion. Villanova brought back a pair of fifth-year guys in Collin Gillespie and Jermaine Samuels, while UCLA will be led by March Madness star Johnny Juzang.\nTexas at Texas Tech, Feb. 1 – This is one you need to be in Lubbock for to truly appreciate the atmosphere. It won’t exactly be a heartwarming homecoming for Chris Beard. Sure, he led the Red Raiders to a national title game appearance and an Elite Eight, but the fans in Lubbock still can’t come to grips with why he’d leave for UT. In fact, they strongly dislike Beard now. This is his first appearance back in Lubbock, and it’ll be interesting to see the reception he receives from the fan base. I don’t expect a lot of pleasantries.\nKentucky at Kansas, Jan. 29 – It’s Kentucky vs. Kansas in the Big 12/SEC Challenge at Allen Fieldhouse. Need I say more?\n\nAs per the r/jayhawks subreddit, although there may have been a spike on these dates, nothing compares whatsoever to the spike around the championship engagement.\nJust as before, we’ll do the same thing for submissions.\n\n\nCode\ntarheel_submissions = (\n    submissions\n    .filter(col(\"subreddit\") == \"tarheels\")\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n    .groupBy(\"year\", \"month\", \"day\")\n    .count()\n)\ntarheel_submissions_df = tarheel_submissions.toPandas()\n\n\n\n\nCode\ntarheel_submissions_df['date'] = pd.to_datetime(tarheel_submissions_df[['year', 'month', 'day']])\ntarheel_submissions_df = tarheel_submissions_df.sort_values(by='date') \nplt.figure(figsize=(8, 6))\nplt.plot(tarheel_submissions_df['date'], tarheel_submissions_df['count'], marker='.', linestyle='-')\nplt.xlabel('Date')\nplt.ylabel('Count')\nplt.title('Submission Count by Day (r/tarheels)')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 18, Finished, Available)\n\n\n\n\n\nWow! There were many fewer submissions on the tarheels subreddit than the jayhawks subreddit. This could, again, be due to a number of reasons, and maybe the engagement on the main page makes up for this difference. We’ll have to see in our next portion of EDA!\n\n\n\nWe found that many of the questions that arose during our question 3 analysis aligned nicely with the next step of our process: finding which team mentions in the main subreddit occurred the most often. Please see our EDA Question 5 for more information.\n\n\n\nNow, we’ll dive in a little more into the subreddit and try to extract interesting insights from the length of comment and submission in r/jayhawks.\n\n\nCode\nfrom pyspark.sql.functions import col\n\nsubmissions_l = submissions.select(\"subreddit\", \"author\", \"title\", \"selftext\", \"created_utc\", \"num_comments\").filter(col(\"subreddit\") == \"jayhawks\")\n\ncomments_l = comments.select(\"subreddit\", \"author\", \"body\", \"parent_id\", \"created_utc\").filter(col(\"subreddit\") == \"jayhawks\")\n\n\n\n\nCode\nfrom pyspark.sql.functions import col, length\n\nsubmissions_l = submissions_l.withColumn(\"selftext_word_count\", length(col(\"selftext\")))\ncomments_l = comments_l.withColumn(\"body_word_count\", length(col(\"body\")))\n\n\n\n\nCode\n\nselftext_word_count = submissions_l.select(\"selftext_word_count\").rdd.flatMap(lambda x: x).collect()\nbody_word_count = comments_l.select(\"body_word_count\").rdd.flatMap(lambda x: x).collect()\n\nplt.figure(figsize=(10, 5))\n\nplt.subplot(1, 2, 1)\nplt.hist(selftext_word_count, bins=20, color='blue')\nplt.title('Word Count in Submissions')\nplt.xlabel('Word Count')\nplt.ylabel('Frequency')\n\nplt.subplot(1, 2, 2)\nplt.hist(body_word_count, bins=20, color='purple')\nplt.title('Word Count in Comments')\nplt.xlabel('Word Count')\nplt.ylabel('Frequency')\n\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 30, Finished, Available)\n\n\n\n\n\nWow! This really helped contextualize the number of comments and submissions on this subreddit. For the submissions, a majority of the submissions were less than 500 words, although there was a small spike of 1500-word submissions. This is interesting, and to me shows that some submissions were written by people who care a lot and take the time to write out lengthy responses. On the other hand, a large majority of all comments were less than 100 words.\nLet’s do the same thing for the r/tarheels page and see what we see there.\n\n\nCode\nsubmissions_w = submissions.select(\"subreddit\", \"author\", \"title\", \"selftext\", \"created_utc\", \"num_comments\").filter(col(\"subreddit\") == \"tarheels\")\ncomments_w = comments.select(\"subreddit\", \"author\", \"body\", \"parent_id\", \"created_utc\").filter(col(\"subreddit\") == \"tarheels\")\n\n\nsubmissions_w = submissions_w.withColumn(\"selftext_word_count\", length(col(\"selftext\")))\ncomments_w = comments_w.withColumn(\"body_word_count\", length(col(\"body\")))\n\n\n\n\nCode\nselftext_word_count = submissions_w.select(\"selftext_word_count\").rdd.flatMap(lambda x: x).collect()\nbody_word_count = comments_w.select(\"body_word_count\").rdd.flatMap(lambda x: x).collect()\n\nplt.figure(figsize=(10, 5))\n\nplt.subplot(1, 2, 1)\nplt.hist(selftext_word_count, bins=20, color='blue')\nplt.title('Word Count in Submissions')\nplt.xlabel('Word Count')\nplt.ylabel('Frequency')\n\nplt.subplot(1, 2, 2)\nplt.hist(body_word_count, bins=20, color='purple')\nplt.title('Word Count in Comments')\nplt.xlabel('Word Count')\nplt.ylabel('Frequency')\n\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 25, 33, Finished, Available)\n\n\n\n\n\nVery weird! This looks very different than the r/jayhawks version. The number of words in the comments and submissions is lower, and there is no relative increase in mid-length postings like there was in the previous iteration. We’d be interested in if any of these trends continue for the main page.\nThis concludes our analysis of Exploratory Data Analysis Question 3. Thank you!\nWork completed by Katherine Nunez"
  },
  {
    "objectID": "project_eda_q1.html",
    "href": "project_eda_q1.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "Business Goal 1: Between the two top teams of 2021-2022 (UNC and Kansas) which has higher reddit engagement.\nTechnical Proposal: Use regular expressions to extract mentions of the UNC and Kansas basketball team from the College Basketball subreddit to determine which is more talked about. Additionally, compute the counts of comments and submissions by day in the respective subreddits of UNC and Kansas basketball to determine which days have the most engagement for each fanbase. Finally also compute a count of comments by day in the large College Basketball subreddit to determine high engagement days in the overall college basketball community.\n\n\n\n\nFirst, let’s look at the comments data.\nLet’s find out which team is more popular in reddit comments.\n\n\nCode\ncomments_popular = comments.withColumn('mention_jayhawks',\n                                        F.when(F.regexp_extract(col('body'), 'jayhawks',0) == 'jayhawks', 1).otherwise(0))\ncomments_popular = comments_popular.withColumn('mention_tarheels',\n                                        F.when(F.regexp_extract(col('body'), 'tarheels',0) == 'tarheels', 1).otherwise(0))\n#reference: https://blog.devgenius.io/regular-expression-regexp-in-pyspark-e5f9b5d9617a                 \n\n\n\n\nCode\ncomments_popular.groupBy('mention_jayhawks').count().show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 35, 19, Finished, Available)\n\n\n+----------------+-------+\n|mention_jayhawks|  count|\n+----------------+-------+\n|               1|     90|\n|               0|1575077|\n+----------------+-------+\n\n\n\n\n\nCode\ncomments_popular.groupBy('mention_tarheels').count().show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 35, 20, Finished, Available)\n\n\n+----------------+-------+\n|mention_tarheels|  count|\n+----------------+-------+\n|               1|     41|\n|               0|1575126|\n+----------------+-------+\n\n\n\nAmong all the comments, 90 comments mention ‘jayhawks’ and 41 comments mention ‘tarheels’. The numbers are both not really huge. To see the popularity of a team, maybe we should look at more words related to the team, like ‘Kansas’ and ‘jayhawks’ and so on.\nIn the comments dataset, there is a column named ‘created_utc’ which contains the information of when the comments were posted. Let’s extract only the date information from it.\nOur project focus on collegiate basketball and the two most successful teams during this basketball season which ranges from November 2021 to around March 2022.\n‘jayhawks’ is about the Kansas team and ‘tarheels’ is about the UNC team.\nLet’s find out which days had the most comments.\n\n\nCode\n\ncomments_eda.groupBy('date') \\\n            .count() \\\n            .sort(desc('count')) \\\n            .show(10)\n#reference: https://sparkbyexamples.com/pyspark/pyspark-dataframe-groupby-and-sort-by-descending-order/\n#           https://www.geeksforgeeks.org/pyspark-groupby-dataframe-with-aggregation-or-count/\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 29, 15, Finished, Available)\n\n\n+----------+-----+\n|      date|count|\n+----------+-----+\n|2022-03-19|59485|\n|2022-03-18|52046|\n|2022-03-20|49716|\n|2022-03-21|41322|\n|2022-03-17|40123|\n|2022-03-25|38882|\n|2022-03-26|35700|\n|2022-04-05|35635|\n|2022-03-12|35390|\n|2022-03-13|34023|\n+----------+-----+\nonly showing top 10 rows\n\n\n\nFrom this dataframe, we can know that days from March 2022 to April 2022 had the most reddit engagement. It makes sense because our project focuses on the whole basketball season which ranges from November 2021 to around March 2022, and March 2022 is the end of the basketball season. People will get extremely excited at the end of the basketball season and definitely lots of people will be talking about the games like the possible champion of this season.\nBetween the two most successful teams in this season, which team had the most reddit engagement?\n\n\nCode\ndf_eda = comments_eda.groupBy('date', 'subreddit') \\\n                     .count() \\\n                     .sort(desc('count'))\n#reference:https://www.geeksforgeeks.org/pyspark-groupby-and-sort-dataframe-in-descending-order/\n#          https://sparkbyexamples.com/pyspark/pyspark-groupby-on-multiple-columns/\n\n\nThe most comments are in the subreddit ‘CollegeBasketball’.\nThen let’s focus on the two most successful teams in this season.\n\n\nCode\n\ndf_eda.where((col('subreddit') == 'jayhawks') | (col('subreddit') == 'tarheels')).show(5)\n#reference: https://medium.com/@uzzaman.ahmed/how-to-use-where-and-filter-in-a-dataframe-with-examples-bc2a9544ae3f#:~:text=In%20Apache%20Spark%2C%20the%20where,evaluates%20to%20False%20are%20removed.\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 31, 22, Finished, Available)\n\n\n+----------+---------+-----+\n|      date|subreddit|count|\n+----------+---------+-----+\n|2022-04-05| jayhawks|  900|\n|2022-03-27| jayhawks|  280|\n|2022-03-19| jayhawks|  215|\n|2022-03-26| jayhawks|  212|\n|2022-04-02| jayhawks|  208|\n+----------+---------+-----+\nonly showing top 5 rows\n\n\n\nwow! It seems that ‘jayhawks’ had more reddit engagement. It also makes sense because the Kansas team is the winner of this season. We can image people screaming, shouting and sending comments after the Kansas team won.\n\n\nCode\ndf_eda_comments = df_eda.where((col('subreddit') == 'jayhawks') | (col('subreddit') == 'tarheels'))\n\n\n\n\nCode\ndf_eda_comments = df_eda_comments.orderBy('date')\n#reference:https://sparkbyexamples.com/pyspark/pyspark-orderby-and-sort-explained/\n\ndf_eda_comments_pd = df_eda_comments.toPandas()\n#reference: https://sparkbyexamples.com/python/convert-pyspark-dataframe-to-pandas/\n\n\n\n\nCode\ncomments_jayhawks = df_eda_comments_pd[df_eda_comments_pd['subreddit'] == 'jayhawks']\ncomments_tarheels = df_eda_comments_pd[df_eda_comments_pd['subreddit'] == 'tarheels']\n#reference:https://www.geeksforgeeks.org/ways-to-filter-pandas-dataframe-by-column-values/\n\n\n\n\n\nLet’s see the popularity of both teams in reddit submissions.\nSimilarly, extract the date information from the ‘created_utc’ column.\nSome days in November 2021 and days in around February 2022 and March 2022 have the most submissions. This season starts in November 2021, and people must be excited about the start of a new basketball season. And when the end of the season came, people would talk about the performances in different games and so on.\n\n\nCode\n\n\nsubmissions_eda.groupBy('date', 'subreddit') \\\n               .count() \\\n               .sort(desc('count')) \\\n               .show(5)\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 32, 40, Finished, Available)\n\n\n+----------+-----------------+-----+\n|      date|        subreddit|count|\n+----------+-----------------+-----+\n|2021-11-10|CollegeBasketball|  186|\n|2021-11-13|CollegeBasketball|  137|\n|2022-03-06|CollegeBasketball|  126|\n|2022-03-11|CollegeBasketball|  126|\n|2022-02-12|CollegeBasketball|  118|\n+----------+-----------------+-----+\nonly showing top 5 rows\n\n\n\nLet’s focus on the submissions in the subreddit ‘jayhawks’ and the subreddit ‘tarheels’.\n\n\nCode\ndf_eda_2 = submissions_eda.groupBy('date','subreddit') \\\n                          .count() \\\n                          .sort(desc('count'))\ndf_eda_2.where((col('subreddit') == 'jayhawks') | (col('subreddit') == 'tarheels')).show(5)\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 32, 44, Finished, Available)\n\n\n+----------+---------+-----+\n|      date|subreddit|count|\n+----------+---------+-----+\n|2022-04-05| jayhawks|    8|\n|2022-04-04| jayhawks|    7|\n|2022-03-27| jayhawks|    6|\n|2022-04-05| tarheels|    5|\n|2022-04-03| jayhawks|    5|\n+----------+---------+-----+\nonly showing top 5 rows\n\n\n\n‘jayhawks’ have the most submissions in April 2022. Certainly! They won!\nWork completed by Shihong Zhou"
  },
  {
    "objectID": "project_eda.html",
    "href": "project_eda.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "Code\nblob_account_name = \"marckvnonprodblob\"\nblob_container_name = \"bigdata\"\n# read only\nblob_sas_token = \"?sv=2021-10-04&st=2023-10-04T01%3A42%3A59Z&se=2024-01-02T02%3A42%3A00Z&sr=c&sp=rlf&sig=w3CH9MbCOpwO7DtHlrahc7AlRPxSZZb8MOgS6TaXLzI%3D\"\n\nwasbs_base_url = (\n    f\"wasbs://{blob_container_name}@{blob_account_name}.blob.core.windows.net/\"\n)\nspark.conf.set(\n    f\"fs.azure.sas.{blob_container_name}.{blob_account_name}.blob.core.windows.net\",\n    blob_sas_token,\n)\n\n\n\n\n\n\n\nCode\ncomments_path = \"reddit-parquet/comments/\"\nsubmissions_path = \"reddit-parquet/submissions/\"\n\ncomments_single_df = spark.read.parquet(f\"{wasbs_base_url}{comments_path}\")\nsubmissions_single_df = spark.read.parquet(f\"{wasbs_base_url}{submissions_path}\")\n\n\n\n\n\n\n\nCode\nsubreddit_values = [\"CollegeBasketball\", \"jayhawks\", \"tarheels\"]\nsubmissions_filtered = submissions_single_df.filter(submissions_single_df['subreddit'].isin(subreddit_values))\ncomments_filtered = comments_single_df.filter(comments_single_df['subreddit'].isin(subreddit_values))\n\nfrom pyspark.sql.functions import *\nfrom datetime import datetime\n\nstart_timestamp = datetime(2021, 9, 1)\nend_timestamp = datetime(2022, 4, 30)\n\nsubmissions_filtered = submissions_filtered.filter((col(\"created_utc\") >= start_timestamp) & (col(\"created_utc\") <= end_timestamp))\ncomments_filtered = comments_filtered.filter((col(\"created_utc\") >= start_timestamp) & (col(\"created_utc\") <= end_timestamp))\n\n\n\n\n\n\n\nCode\nworkspace_default_storage_account = \"aml6214727930\"\nworkspace_default_container = \"azureml-blobstore-6653633b-3460-4381-9199-d9e0f368353c\"\n\nworkspace_wasbs_base_url = (\n    f\"wasbs://{workspace_default_container}@{workspace_default_storage_account}.blob.core.windows.net/\"\n)\n\ncomments_filtered.select(\"subreddit\", \"author\",\"author_flair_text\", \"body\", \"parent_id\", \"link_id\", \"id\", \"created_utc\").write.mode(\"overwrite\").parquet(f\"{workspace_wasbs_base_url}/basketball_comments_sep.parquet\")\nsubmissions_filtered.select(\"subreddit\", \"author\", 'author_flair_text',\"title\", \"selftext\", \"created_utc\", \"num_comments\").write.mode(\"overwrite\").parquet(f\"{workspace_wasbs_base_url}/basketball_submissions_sep.parquet\")\n\n\n\n\n\n\nCode\nworkspace_default_storage_account = \"aml6214727930\"\nworkspace_default_container = \"azureml-blobstore-6653633b-3460-4381-9199-d9e0f368353c\"\n\nworkspace_wasbs_base_url = (\n    f\"wasbs://{workspace_default_container}@{workspace_default_storage_account}.blob.core.windows.net/\"\n)\n\ncomments_path = \"/basketball_comments_sep.parquet\"\nsubmissions_path = \"/basketball_submissions_sep.parquet\"\n\ncomments = spark.read.parquet(f\"{workspace_wasbs_base_url}{comments_path}\")\nsubmissions = spark.read.parquet(f\"{workspace_wasbs_base_url}{submissions_path}\")"
  },
  {
    "objectID": "project_eda_q4.html",
    "href": "project_eda_q4.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "Business Goal 4: Identify the teams that have the most engagement on the main college basketball subreddit.\nTechnical Proposal: Use grouping and sorting algorithms to find which college basketball teams are the most mentioned teams. Using key word searches we can identify mentions of these teams. Identify if these mentions ebb or flow over the course of the season.\nFor this question, we mainly focus on the r/CollegeBasketball subreddit.\n\n\nTo commence our analysis of the 2022 basketball tournament, it’s crucial to identify key teams for detailed study. Among the 68 participating teams, our focus will be on the Elite 8. These teams, namely Houston, Kansas, Villanova, Duke, Arkansas, Saint Peter’s, North Carolina, and Miami, not only excelled in the tournament but also garnered significant audience interest, as per the 2022 DI Men’s Basketball Championship Official Bracket (https://www.ncaa.com/brackets/basketball-men/d1/2022). Additionally, incorporating insights from author_flair_text analysis, we included Purdue and Illinois, two teams that enjoyed considerable support, to broaden our scope.\nTo begin our examination of engagement levels in submissions and comments associated with each team, it’s essential to develop a comprehensive keyword dictionary. This resource will facilitate precise analysis by identifying content related to the teams in focus. The dictionary will encompass various identifiers for each team, including official team names, popular nicknames, abbreviations, and other relevant terms. This approach ensures a thorough and accurate assessment of team-specific engagement.\n\n\nCode\n# Define a dictionary of teams and associated keywords\nteam_keywords = {\n    'houston': ['houston', 'cougars', 'uh', 'uh cougars'],\n    'kansas': ['kansas', 'jayhawks', 'ku', 'rock chalk', 'ku jayhawks'],\n    'villanova': ['villanova', 'wildcats', 'nova', 'villanova wildcats'],\n    'duke': ['duke', 'blue devils', 'duke blue devils'],\n    'arkansas': ['arkansas', 'razorbacks', 'hogs', 'u of a', 'arkansas razorbacks'],\n    'saint peters': [\"saint peter's\", 'peacocks', \"saint peter's peacocks\", 'saint peters', \"st. peter's\", 'st peters', 'spu'],\n    'north carolina': ['north carolina', 'tar heels', 'unc', 'unc tar heels'],\n    'miami': ['miami', 'hurricanes', 'um', 'miami hurricanes'],\n    'purdue': ['purdue', 'boilermakers', 'purdue boilermakers', 'pu'],\n    'illinois': ['illinois', 'fighting illini', 'illini', 'u of i', 'university of illinois']\n}\n\n\n\n\nCode\nfrom pyspark.sql.functions import lower\n\n# Lowercase the text fields for uniformity\ncomments = comments.withColumn('body', lower(col('body')))\nsubmissions = submissions.withColumn('title', lower(col('title')))\\\n                         .withColumn('selftext', lower(col('selftext')))\n\n\n\n\nCode\nfrom pyspark.sql.functions import udf, lit, array\nfrom pyspark.sql.types import BooleanType\n\n# Define the UDF to check the existence of key words\ndef keyword_present(text, keywords):\n    if text:\n        return any(keyword in text for keyword in keywords)\n    return False\n\nkeyword_udf = udf(keyword_present, BooleanType())\n\n\n\n\nCode\n# Apply the UDF\nfor team, keywords in team_keywords.items():\n    submissions = submissions.withColumn(\n        team,\n        keyword_udf(col(\"title\"), array([lit(k) for k in keywords])) | keyword_udf(col(\"selftext\"), array([lit(k) for k in keywords]))\n    )\n    comments = comments.withColumn(\n        team, \n        keyword_udf(col(\"body\"), array([lit(k) for k in keywords]))\n    )\n\n\n\n\nCode\nfrom pyspark.sql.functions import sum as sql_sum\n\n# Aggregate the counts for submissions\nsubmissions_counts = submissions.select([sql_sum(col(team).cast(\"int\")).alias(team) for team in team_keywords.keys()])\n\n# Aggregate the counts for comments\ncomments_counts = comments.select([sql_sum(col(team).cast(\"int\")).alias(team) for team in team_keywords.keys()])\n\n\nNow that we have completed the group statistics of the number of mentions for these 8 teams, let’s check the results.\n\n\nCode\nprint(\"Team Mentions in Submissions\")\nsubmissions_counts.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 36, 20, Finished, Available)\n\n\nTeam Mentions in Submissions\n+-------+------+---------+----+--------+------------+--------------+-----+------+--------+\n|houston|kansas|villanova|duke|arkansas|saint peters|north carolina|miami|purdue|illinois|\n+-------+------+---------+----+--------+------------+--------------+-----+------+--------+\n|    454|   969|      385| 453|     371|         149|           809| 3102|   840|     572|\n+-------+------+---------+----+--------+------------+--------------+-----+------+--------+\n\n\n\n\n\nCode\nprint(\"Team Mentions in Comments\")\ncomments_counts.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 36, 21, Finished, Available)\n\n\nTeam Mentions in Comments\n+-------+------+---------+-----+--------+------------+--------------+-----+------+--------+\n|houston|kansas|villanova| duke|arkansas|saint peters|north carolina|miami|purdue|illinois|\n+-------+------+---------+-----+--------+------------+--------------+-----+------+--------+\n|  17144| 34285|    12317|31856|    9246|        6020|         46033|69595| 70959|   14189|\n+-------+------+---------+-----+--------+------------+--------------+-----+------+--------+\n\n\n\nTo display the results more visually, let’s create two histograms to illustrate.\n\n\nCode\n# Convert the Spark DataFrame to a Pandas DataFrame\nsubmissions_counts_pd = submissions_counts.toPandas()\ncomments_counts_pd = comments_counts.toPandas()\n\n\n\n\nCode\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Histogram for Submissions Counts\nplt.figure(figsize=(10, 6))\nplt.bar(submissions_counts_pd.columns, submissions_counts_pd.iloc[0], color='blue')\nplt.title('Histogram of Team Mentions in Submissions')\nplt.xlabel('Teams')\nplt.ylabel('Mentions')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 37, 20, Finished, Available)\n\n\n\n\n\nThe graph presents a striking observation: Miami is mentioned markedly more often than other teams, a notably unexpected finding. Additionally, it reveals that the comment mention counts for Kansas, the 2022 champion, North Carolina, the runner-up, and the consistently strong Purdue, significantly exceed those of other teams. This aligns with typical expectations and highlights their prominence in discussions.\n\n\nCode\n# Histogram for Comments Counts\nplt.figure(figsize=(10, 6))\nplt.bar(comments_counts_pd.columns, comments_counts_pd.iloc[0], color='blue')\nplt.title('Histogram of Team Mentions in Comments')\nplt.xlabel('Teams')\nplt.ylabel('Mentions')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 37, 21, Finished, Available)\n\n\n\n\n\nThe data from the comment counts largely mirrors the trends observed in the previous figure, with a notable exception: Purdue’s mentions significantly surpass those of Kansas and North Carolina, aligning them more closely with Miami’s high mention frequency. This suggests a distinct level of engagement and interest in Purdue, setting it apart from the other teams.\nThe empirical analysis reveals a correlation between a team’s number of mentions and factors like popularity and season performance. Frequently mentioned teams include top performers like Kansas, the eventual champions, and unexpected contenders like North Carolina, which aligns with our initial expectations. Intriguingly, a team like Miami, despite a lower seed ranking and only reaching the top eight, has garnered more submissions and comment mentions than even the championship team. This anomaly suggests there are additional underlying factors influencing Miami’s high visibility, warranting further investigation to uncover these reasons.\n\n\n\nAs we progress, our objective is to conduct a detailed analysis of the daily mention trends for each team. This will offer a more nuanced understanding of how audience engagement evolved over the course of the tournament. To optimize our analysis, and informed by our previous findings, we’ve narrowed our focus to Miami, Kansas, North Carolina, and Purdue. These four teams, having attracted a significantly higher volume of mentions, are ideal candidates for our in-depth examination of engagement patterns.\n\n\nCode\n# Plot Daily Team Mentions in Submissions\n# Convert the Spark DataFrame to a Pandas DataFrame\ndaily_mentions_submissions_pd = daily_mentions_submissions.toPandas()\n\n# Convert year, month, day to a datetime object\ndaily_mentions_submissions_pd['date'] = pd.to_datetime(daily_mentions_submissions_pd[['year', 'month', 'day']])\n\n# Set the 'date' column as index\ndaily_mentions_submissions_pd.set_index('date', inplace=True)\n\n# Drop the year, month, and day columns\ndaily_mentions_submissions_pd.drop(['year', 'month', 'day'], axis=1, inplace=True)\n\n# Sort the DataFrame by date\ndaily_mentions_submissions_pd.sort_index(inplace=True)\n\n# Plot\nplt.figure(figsize=(14, 8))\n\nfor column in daily_mentions_submissions_pd.columns:\n    plt.plot(daily_mentions_submissions_pd.index, daily_mentions_submissions_pd[column], label=column.replace('_', ' ').title())\n\nplt.xlabel('Date')\nplt.ylabel('Daily Mentions')\nplt.title('Daily Team Mentions in Submissions')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 37, 25, Finished, Available)\n\n\n\n\n\nThe chart illustrates a distinct trend: From the season’s onset in November 2021 to March 2022, Miami led in commit frequency, surpassing other teams. However, a shift occurred in mid-March 2022, as Miami’s commit frequency began to decline, eventually aligning with the baseline levels seen in other teams. Concurrently, there was a notable surge in submissions related to Kansas and North Carolina, culminating in a peak in early April 2022. This increase is clearly linked to their progression to the finals, reflecting heightened audience interest and engagement as these teams advanced in the tournament.\n\n\nCode\n# Plot Daily Team Mentions in Comments\n# Convert the Spark DataFrame to a Pandas DataFrame\ndaily_mentions_comments_pd = daily_mentions_comments.toPandas()\n\n# Convert year, month, day to a datetime object\ndaily_mentions_comments_pd['date'] = pd.to_datetime(daily_mentions_comments_pd[['year', 'month', 'day']])\n\n# Set the 'date' column as index\ndaily_mentions_comments_pd.set_index('date', inplace=True)\n\n# Drop the year, month, and day columns\ndaily_mentions_comments_pd.drop(['year', 'month', 'day'], axis=1, inplace=True)\n\n# Sort the DataFrame by date\ndaily_mentions_comments_pd.sort_index(inplace=True)\n\n# Plot\nplt.figure(figsize=(14, 8))\n\nfor column in daily_mentions_comments_pd.columns:\n    plt.plot(daily_mentions_comments_pd.index, daily_mentions_comments_pd[column], label=column.replace('_', ' ').title())\n\nplt.xlabel('Date')\nplt.ylabel('Daily Mentions')\nplt.title('Daily Team Mentions in Comments')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n\nStatementMeta(7c27951d-2bdf-4140-be82-d0dc0c0e7d8e, 37, 26, Finished, Available)\n\n\n\n\n\nThe data shows that while Miami and Purdue have a higher volume of daily comments, the disparity isn’t as marked when compared to other teams. Both teams experienced a peak in comment activity from mid-to-late March. This trend aligns with key tournament events: Purdue’s journey ended in the top 16 after their loss to St. Peter’s on March 25, while Miami concluded in the top 8 following their defeat by Kansas on March 27. North Carolina’s peak in comment volume around mid-March can be directly attributed to their victory over the previous year’s champions, Baylor. Kansas, on the other hand, saw its comment numbers reach the highest point among all teams in early April 2022, a testament to their ultimate championship victory, drawing substantial audience engagement and discussion.\nOverall, the variations in comment volume mirror the dynamics of audience engagement. As the season approaches its climax, particularly the finals, discussions intensify. The disparity in comment counts across different teams highlights the variations in their popularity and performance throughout the season. The data vividly illustrates that audience engagement peaked during critical matches, with this fervor culminating in the finals on April 4, indicating a high level of interest and involvement from fans during these pivotal moments of the tournament.\nWork Completed by Yifan Hu"
  },
  {
    "objectID": "project_eda_dataframe.html",
    "href": "project_eda_dataframe.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "This section covers:\n\nData Cleaning\nDataframe Analysis\nCreating New Variables\n\n\n\nHere we load the intermediate data which includes 2 datasets: Comments and Submissions. These datasets include all the Reddit posts between September 2021 and April 2022 (The approximate length of the College Basketball Season). No additional cleaning has already been done on this data\n\n\nCode\n## Necessary Libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pyspark.sql.functions import *\n\nworkspace_default_storage_account = \"aml6214727930\"\nworkspace_default_container = \"azureml-blobstore-6653633b-3460-4381-9199-d9e0f368353c\"\n\nworkspace_wasbs_base_url = (\n    f\"wasbs://{workspace_default_container}@{workspace_default_storage_account}.blob.core.windows.net/\"\n)\n\ncomments_path = \"/basketball_comments_sep.parquet\"\nsubmissions_path = \"/basketball_submissions_sep.parquet\"\n\ncomments = spark.read.parquet(f\"{workspace_wasbs_base_url}{comments_path}\")\nsubmissions = spark.read.parquet(f\"{workspace_wasbs_base_url}{submissions_path}\")\nsubmissions = submissions.cache()\ncomments = comments.cache()\n\n\n\n\n\n\n\nThe breakdown of the 3 subreddits by number of posts is heavily imbalanced as is expected. In submissions there are just over 22,000 posts and in comments there are just over 1,575,000 comments. The majority of these posts come from the CollegeBasketball subreddit.\n\n\nCode\nprint(\"Count of Submissions by Subreddit\")\nprint(submissions.groupBy('subreddit').count().show())\n\nprint(\"Count of Comments by Subreddit\")\nprint(comments.groupBy('subreddit').count().show())\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 13, Finished, Available)\n\n\nCount of Submissions by Subreddit\n+-----------------+-----+\n|        subreddit|count|\n+-----------------+-----+\n|         jayhawks|  632|\n|CollegeBasketball|21290|\n|         tarheels|  230|\n+-----------------+-----+\n\nNone\nCount of Comments by Subreddit\n+-----------------+-------+\n|        subreddit|  count|\n+-----------------+-------+\n|         jayhawks|   6541|\n|CollegeBasketball|1567801|\n|         tarheels|    828|\n+-----------------+-------+\n\nNone\n\n\nThe important variables in the submissions dataframe are\n\nsubreddit: The Subreddit that the post is in\nauthor : Who authored the post\nselftext : The contents of the post\ncreated_utc : The timestamp of the post\n\nThe important variables in the comments dataframe are\n\nsubreddit: The Subreddit that the post is in\nauthor : Who authored the post\nbody : The contents of the post\ncreated_utc : The timestamp of the post\n\n\n\nCode\nprint(\"Submissions Schema\")\nsubmissions.printSchema()\n\nprint(\"Comments Schema\")\ncomments.printSchema()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 17, Finished, Available)\n\n\nSubmissions Schema\nroot\n |-- subreddit: string (nullable = true)\n |-- author: string (nullable = true)\n |-- author_flair_text: string (nullable = true)\n |-- title: string (nullable = true)\n |-- selftext: string (nullable = true)\n |-- created_utc: timestamp (nullable = true)\n |-- num_comments: long (nullable = true)\n\nComments Schema\nroot\n |-- subreddit: string (nullable = true)\n |-- author: string (nullable = true)\n |-- author_flair_text: string (nullable = true)\n |-- body: string (nullable = true)\n |-- parent_id: string (nullable = true)\n |-- link_id: string (nullable = true)\n |-- id: string (nullable = true)\n |-- created_utc: timestamp (nullable = true)\n\n\n\n\n\n\nSince Reddit is a user driven platform there will likely be issues with missing text in posts or deleted posts/comments. Lets check for missing data before we proceed.\n\n\nCode\n# Submissions\nmissing_values = [\"\", \"[deleted]\", \"[removed]\"]\nmissing_df = submissions.withColumn(\"selftext\", when(col(\"selftext\").isin(missing_values), None).otherwise(col(\"selftext\")))\nmissing_data_count = missing_df.filter(col(\"selftext\").isNull()).count()\nprint(\"Missing Text Column in Submissions =\",missing_data_count)\n# Comments\nmissing_df_c = comments.withColumn(\"body\", when(col(\"body\").isin(missing_values), None).otherwise(col(\"body\")))\nmissing_data_count = missing_df_c.filter(col(\"body\").isNull()).count()\nprint(\"Missing Text Column in Comments =\",missing_data_count)\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 16, 12, Finished, Available)\n\n\nMissing Text Column in Submissions = 12348\nMissing Text Column in Comments = 85295\n\n\nThere are over 12,000 missing posts in Submissions and around 85,000 missing comments in Comments. We will remove these before doing further analysis\n\n\nCode\nsubmissions = missing_df.na.drop(subset=[\"selftext\"])\ncomments = missing_df_c.na.drop(subset = [\"body\"])\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 16, 13, Finished, Available)\n\n\nThe new counts of the subreddits with missing removed show about half of the submission data remaining, but a large portion of the comments data is intact.\n\n\nCode\nprint(\"Count of Submissions by Subreddit with Missing Removed\")\nprint(submissions.groupBy('subreddit').count().show())\n\nprint(\"Count of Comments by Subreddit with Missing Removed\")\nprint(comments.groupBy('subreddit').count().show())\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 28, Finished, Available)\n\n\nCount of Submissions by Subreddit with Missing Removed\n+-----------------+-----+\n|        subreddit|count|\n+-----------------+-----+\n|         jayhawks|  204|\n|CollegeBasketball| 9567|\n|         tarheels|   33|\n+-----------------+-----+\n\nNone\nCount of Comments by Subreddit with Missing Removed\n+-----------------+-------+\n|        subreddit|  count|\n+-----------------+-------+\n|         jayhawks|   6328|\n|CollegeBasketball|1482767|\n|         tarheels|    780|\n+-----------------+-------+\n\nNone\n\n\n\n\n\n\n\nCode\nsubmissions = (\n    submissions\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n)\ncomments = (\n    comments\n    .withColumn(\"day\", dayofmonth(col(\"created_utc\")))\n    .withColumn(\"month\", month(col(\"created_utc\")))\n    .withColumn(\"year\", year(col(\"created_utc\")))\n)\n\n\n\n\n\nHere we can see the most important columns from submissions and comments. The selftext and body columns hold the post and comments, respectively.\n\n\nCode\nprint(\"Submission Data\")\nsubmissions.select(\"subreddit\", \"author\", \"title\", \"selftext\", \"created_utc\", \"num_comments\").show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 29, Finished, Available)\n\n\nSubmission Data\n+-----------------+--------------------+--------------------+--------------------+-------------------+------------+\n|        subreddit|              author|               title|            selftext|        created_utc|num_comments|\n+-----------------+--------------------+--------------------+--------------------+-------------------+------------+\n|CollegeBasketball|             rCBBMod|Announcement: The...|Hello r/CollegeBa...|2022-03-17 14:00:50|           9|\n|CollegeBasketball|       AutoModerator|[Weekly Post] Fre...|Are you new to th...|2022-04-29 15:00:11|           0|\n|CollegeBasketball|       AutoModerator|[Weekly Post] Fre...|It's Free Talk Fr...|2022-04-29 15:00:11|           1|\n|CollegeBasketball|              cbbBot|[Game Thread] Neb...|[Nebraska](#f/neb...|2022-02-23 00:54:05|          41|\n|CollegeBasketball|              cbbBot|[Game Thread] Kan...|[Kansas State](#f...|2022-02-23 01:00:04|         626|\n|CollegeBasketball|              cbbBot|[Game Thread] #24...|[Alabama](#f/alab...|2022-02-23 01:00:05|         198|\n|CollegeBasketball|              cbbBot|[Game Thread] San...|[San Diego State]...|2022-02-23 01:00:06|         135|\n|CollegeBasketball|              i_MiLK|Meet the Mid-Majo...|Hello March Madne...|2022-03-07 14:41:43|           5|\n|CollegeBasketball|          INtoCT2015|Izzo surpasses Bo...|Sorry to hijack I...|2022-03-07 14:50:10|           9|\n|CollegeBasketball|   urdueBoilermakers|Since the Big Ten...|(Note, when Purdu...|2022-03-07 14:55:07|          47|\n|CollegeBasketball|          sourceit88|240 Teams are sti...|Sunday had 17 new...|2022-03-07 14:58:37|           4|\n|CollegeBasketball|          cbbpollbot|  User Poll: Week 18|\\nRank||Team (Fir...|2022-03-07 15:00:04|         173|\n|CollegeBasketball|  Sharp_Quarter_8343|               BIG10|Anyone else think...|2022-03-07 15:03:26|          19|\n|CollegeBasketball|              cbbBot|Game Thread Index...|# Ranked Games\\n\\...|2022-03-07 15:07:07|           0|\n|CollegeBasketball|      TallLatvianLad|Mid-Major+ User P...|Rankings of teams...|2022-03-07 15:11:12|           9|\n|         tarheels|SteelHeelNittanyLion|What seed do you ...|[removed]\\n\\n[Vie...|2022-03-07 15:12:34|           0|\n|CollegeBasketball|              cbbBot|[Game Thread] #18...|[Texas](#f/texas)...|2021-12-19 19:00:06|          23|\n|CollegeBasketball|              cbbBot|[Game Thread] UT ...|[UT Martin](#f/ut...|2021-12-19 19:00:10|           0|\n|CollegeBasketball|              cbbBot|[Game Thread] UT ...|[UT Arlington](#f...|2021-12-19 19:00:14|           2|\n|CollegeBasketball|              cbbBot|[Game Thread] SMU...|[SMU](#f/smu) **9...|2021-12-19 19:00:19|           3|\n+-----------------+--------------------+--------------------+--------------------+-------------------+------------+\nonly showing top 20 rows\n\n\n\n\n\nCode\nprint(\"Comments Data\")\ncomments.select(\"subreddit\", \"author\",\"author_flair_text\", \"body\", \"created_utc\").show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 33, Finished, Available)\n\n\nComments Data\n+-----------------+-------------------+--------------------+--------------------+-------------------+\n|        subreddit|             author|   author_flair_text|                body|        created_utc|\n+-----------------+-------------------+--------------------+--------------------+-------------------+\n|CollegeBasketball|         joeveralls|:cincinnati: :ohi...|Nothing is fallin...|2021-11-14 00:27:16|\n|CollegeBasketball|       DaddyStone13|:cincinnati: :big...|lol i forgot abou...|2021-11-14 00:27:51|\n|CollegeBasketball|        seahawksjoe|   :usc: USC Trojans|Also, half of the...|2021-11-14 00:28:36|\n|CollegeBasketball|       CheeseAndCam|:iowastate: Iowa ...|I like how Creigh...|2021-11-14 00:30:06|\n|CollegeBasketball|          [deleted]|                null|  Losing, apparently|2021-11-14 00:30:17|\n|CollegeBasketball|       corranhorn57|:cincinnati: Cinc...|Oklahoma lost, th...|2021-11-14 00:30:26|\n|CollegeBasketball|SwimmingInYourPants|   :usc: USC Trojans|Ah, I missed thes...|2021-11-14 00:30:29|\n|CollegeBasketball|          Papytendo|:temple: :bestofw...|This gonna be one...|2021-11-14 00:30:32|\n|CollegeBasketball|           love2Vax|:rutgers: Rutgers...|He was missing sh...|2021-11-14 00:31:19|\n|CollegeBasketball|        seahawksjoe|   :usc: USC Trojans|This man really j...|2021-11-14 00:31:51|\n|CollegeBasketball|         Cnsrbstrmp|:cincinnati: Cinc...|High IQ play ther...|2021-11-14 00:32:11|\n|CollegeBasketball|              s-sea|:usc: :nebraska: ...|yeesh yeah, 14 fo...|2021-11-14 00:32:15|\n|CollegeBasketball|           myth7550|:indiana: Indiana...|      You bet we do!|2021-11-14 00:32:52|\n|CollegeBasketball|            mjd1977|:vanderbilt: :vil...|Northern Iowa. Fa...|2021-11-14 00:33:16|\n|CollegeBasketball| WildfireTommyBitch|:memphis: Memphis...|Checking in on a ...|2021-11-14 00:33:21|\n|CollegeBasketball|       corranhorn57|:cincinnati: Cinc...|  Now we’re rolling!|2021-11-14 00:34:14|\n|CollegeBasketball|              s-sea|:usc: :nebraska: ...|lmao, I'm watchin...|2021-11-14 00:34:28|\n|CollegeBasketball|         Cnsrbstrmp|:cincinnati: Cinc...|        Attaway CATS|2021-11-14 00:34:31|\n|CollegeBasketball|         MusaEnsete|:michigan: Michig...|So glad to see th...|2021-11-14 00:34:58|\n|CollegeBasketball|      HurricaneHugo|:ucsd: :sandiegos...|         Pretty cool|2021-11-14 00:35:19|\n+-----------------+-------------------+--------------------+--------------------+-------------------+\nonly showing top 20 rows\n\n\n\n\n\n\nauthor_flair_text is a column that contains information about the user icon of the reddit user. In most of these posts this is the team that the author supports. Here we create a new variable that indicates who the author of the comment or post supports\n\n\nCode\nteam_pattern = r\":([\\w\\s]+):\"\n\n# Extract the team names and create the \"supported_team\" column\nsubmissions = submissions.withColumn(\"supported_team\", regexp_extract(col(\"author_flair_text\"), team_pattern, 1))\ncomments = comments.withColumn(\"supported_team\", regexp_extract(col(\"author_flair_text\"), team_pattern, 1))\n\n\nIf we remove the r/tarheels and r/jayhawks subreddits from our data temporarily we can get a good idea of what teams are the most supported in the user base of r/CollegeBasektball.\nIn submissions the most common icons are the default rcbb (r/collegebasketball) and null (no icon). Ignoring those we see that the most supported teams are Florida State, Illinois, Purdue, and Duke. In comments, null is the most common icon, however after that the most supported teams are Purdue, North Carolina, Illinois, and Kentucky.\nThis shows that some fan bases may be more active posters while others may be more involved in the comments section.\n\n\nCode\nprint(\"Submissions Top Supported Teams\")\nsubmissions.filter(col(\"subreddit\")==\"CollegeBasketball\").groupBy(\"supported_team\").agg(count(\"*\").alias(\"count\")).orderBy(desc(\"count\")).show()\nprint(\"Comments Top Supported Teams\")\ncomments.filter(col(\"subreddit\")==\"CollegeBasketball\").groupBy(\"supported_team\").agg(count(\"*\").alias(\"count\")).orderBy(desc(\"count\")).show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 14, 44, Finished, Available)\n\n\nSubmissions Top Supported Teams\n+----------------+-----+\n|  supported_team|count|\n+----------------+-----+\n|            rcbb| 6632|\n|            null|  821|\n|    floridastate|  124|\n|        illinois|   89|\n|          purdue|   84|\n|            duke|   69|\n|   northcarolina|   66|\n|          kansas|   64|\n|       iowastate|   64|\n|        virginia|   62|\n|        kentucky|   62|\n|     connecticut|   51|\n|          dayton|   48|\n|        michigan|   43|\n|mississippistate|   42|\n|         indiana|   36|\n|         gonzaga|   35|\n|    sanjosestate|   35|\n|   michiganstate|   33|\n|          auburn|   32|\n+----------------+-----+\nonly showing top 20 rows\n\nComments Top Supported Teams\n+--------------+------+\n|supported_team| count|\n+--------------+------+\n|          null|173474|\n|        purdue| 72772|\n| northcarolina| 68933|\n|      illinois| 62610|\n|      kentucky| 56856|\n|        kansas| 55664|\n|      michigan| 52395|\n| michiganstate| 51169|\n|       indiana| 40537|\n|        auburn| 39623|\n|          duke| 34871|\n|     texastech| 34346|\n|     iowastate| 32179|\n|     wisconsin| 32087|\n|          iowa| 27663|\n|      virginia| 25376|\n|       arizona| 24325|\n|      arkansas| 22708|\n|       gonzaga| 21720|\n|     ohiostate| 20953|\n+--------------+------+\nonly showing top 20 rows\n\n\n\n\n\n\nSome posts in the submissions of r/CollegeBasketball are game threads where people can comment on and discuss specific games that are being played. We can extract information about the title to determine the teams playing in the game, their rankings, and the time the game is being played.\nFrom here we can determine which games have the most comments and thereby can act as a proxy for which games were the most watched on reddit. We see that the most commented on games involve North Carolina, and further analysis of these games show that the three most popular games are the Elite Eights, Final Four, and Championship games for North Carolina. Additionally we see that all of the most popular games are between ranked teams.\nExpanding on this finding that ranked matchups seem to have more interest we did some further analysis to look at the popularity of games over the course of a season and also the difference between ranked and unranked mathcups. Here we see that ranked matchups have significantly higher average number of comment in all months of the season. If we compare only February, ranked matchups have on average 12.5 times the number of comments of unranked matchups. Additionally we see that April and March have the highest number of average comments across both groups, while the earlier months in the season (November and December) have lower average comments per game.\n\n\nCode\n# create condition for title column starting with the string [Game Thread]\ncondition = submissions[\"title\"].startswith(\"[Game Thread]\")\n# create new column in submissions indicating if post is a game thread\nsubmissions = submissions.withColumn(\"game_thread\", when(condition, True).otherwise(False))\n\nteams_pattern = \"\\[Game Thread\\] (#?(\\d*) )?([^\\[@]+) @ (#?(\\d*) )?([^\\[@]+) \\((\\d{2}:\\d{2} [APMapm]{2} [A-Za-z]+)\\)\"\nsubmissions = submissions.withColumn(\"home_ranking\", regexp_extract(col(\"title\"), teams_pattern, 5))\nsubmissions = submissions.withColumn(\"home_team\", regexp_extract(col(\"title\"), teams_pattern, 6))\nsubmissions = submissions.withColumn(\"away_ranking\", regexp_extract(col(\"title\"), teams_pattern, 2))\nsubmissions = submissions.withColumn(\"away_team\", regexp_extract(col(\"title\"), teams_pattern, 3))\nsubmissions = submissions.withColumn(\"game_time\", regexp_extract(col(\"title\"), teams_pattern, 7))\nsubmissions = submissions.withColumn(\"ranked_matchup\", when((col(\"home_ranking\")!=\"\")& (col(\"away_ranking\")!=\"\"),True).otherwise(False))\n\n\n\n\nCode\nsubmissions.filter(col(\"game_thread\")==1).orderBy(col(\"num_comments\").desc()).limit(20).select(\"title\", \"num_comments\").show(truncate = False)\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 16, 37, Finished, Available)\n\n\n+-----------------------------------------------------------------+------------+\n|title                                                            |num_comments|\n+-----------------------------------------------------------------+------------+\n|[Game Thread] #8 North Carolina @ #1 Kansas (09:20 PM ET)        |20723       |\n|[Game Thread] #8 North Carolina @ #1 Baylor (12:10 PM ET)        |18640       |\n|[Game Thread] #8 North Carolina @ #2 Duke (08:49 PM ET)          |11959       |\n|[Game Thread] #15 Saint Peter's @ #3 Purdue (07:09 PM ET)        |9872        |\n|[Game Thread] #4 Arkansas @ #1 Gonzaga (07:09 PM ET)             |9648        |\n|[Game Thread] #15 Saint Peter's @ #8 North Carolina (05:05 PM ET)|8080        |\n|[Game Thread] #9 TCU @ #1 Arizona (09:40 PM ET)                  |7972        |\n|[Game Thread] #3 Texas Tech @ #2 Duke (09:39 PM ET)              |7045        |\n|[Game Thread] #7 Michigan State @ #2 Duke (05:15 PM ET)          |6857        |\n|[Game Thread] #4 Arkansas @ #2 Duke (08:49 PM ET)                |6775        |\n|[Game Thread] #9 Memphis @ #1 Gonzaga (09:40 PM ET)              |6698        |\n|[Game Thread] #6 Texas @ #3 Purdue (08:40 PM ET)                 |6694        |\n|[Game Thread] #15 Saint Peter's @ #2 Kentucky (07:10 PM ET)      |6682        |\n|[Game Thread] #5 Houston @ #4 Illinois (12:10 PM ET)             |6419        |\n|[Game Thread] #11 Iowa State @ #3 Wisconsin (06:10 PM ET)        |6245        |\n|[Game Thread] #11 Notre Dame @ #11 Rutgers (09:10 PM ET)         |5868        |\n|[Game Thread] #11 Michigan @ #6 Colorado State (12:15 PM ET)     |5680        |\n|[Game Thread] #25 Texas @ #13 Texas Tech (09:00 PM ET)           |5626        |\n|[Game Thread] #12 Indiana @ #12 Wyoming (09:10 PM ET)            |5591        |\n|[Game Thread] #12 Kentucky @ #1 Auburn (01:00 PM ET)             |5537        |\n+-----------------------------------------------------------------+------------+\n\n\n\n\n\nCode\nsubmissions.filter(col(\"game_thread\")==1).groupBy(\"year\", \"month\", \"ranked_matchup\").agg(round(mean(\"num_comments\"),0).alias(\"average_comments\"), sum(col(\"num_comments\")).alias(\"total_comments\")).orderBy(col(\"average_comments\").desc()).limit(11).show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 16, 65, Finished, Available)\n\n\n+----+-----+--------------+----------------+--------------+\n|year|month|ranked_matchup|average_comments|total_comments|\n+----+-----+--------------+----------------+--------------+\n|2022|    4|          true|         12685.0|         38055|\n|2022|    3|          true|          3290.0|        263187|\n|2021|   11|          true|          1818.0|         18181|\n|2022|    2|          true|          1570.0|         48671|\n|2022|    1|          true|          1470.0|         38213|\n|2021|   12|          true|           740.0|          7395|\n|2022|    3|         false|           215.0|         97438|\n|2022|    1|         false|           129.0|         84812|\n|2022|    2|         false|           125.0|         93661|\n|2021|   12|         false|           103.0|         54828|\n|2021|   11|         false|            89.0|         58010|\n+----+-----+--------------+----------------+--------------+\n\n\n\nUsing this cleaned data we will proceed to answer our business questions\nWork completed by Klaas van Kempen"
  },
  {
    "objectID": "project_eda_q2.html",
    "href": "project_eda_q2.html",
    "title": "College Basketball Reddit Project",
    "section": "",
    "text": "Business Goal 2: Determine how reddit activity ebbs and flows over the course of a collegiate basketball season. Construct visuals to aid in understanding how much reddit users post over the course of the 2022 season.\nTechnical Proposal: Group by date to determine the number of comments and submissions in the college basketball subreddit and visualize both of these time series plots. Compute the word count in each comment/submission and plot the average word count by day over the time period. Finally plot a heatmap comparing the count of comments on each day of week/hour of day combination to identify and weekly/daily cyclical trends.\n\n\n\n\nCode\nq = (\n    comments\n    .filter(col(\"subreddit\") == \"CollegeBasketball\") # filter to only collegebasketball subreddit\n    .groupBy(\"year\", \"month\", \"day\") # group by day\n    .count() # return count\n)\ndf = q.toPandas() # send to pandas\n\nt = (\n    submissions\n    .filter(col(\"subreddit\") == \"CollegeBasketball\") # filter to only collegebasketball subreddit\n    .groupBy(\"year\", \"month\", \"day\") # group by day\n    .count() # return count\n)\ndf_s = t.toPandas() # send to pandas\n\ndf['date'] = pd.to_datetime(df[['year', 'month', 'day']])\ndf = df.sort_values(by='date') \n\ndf_s['date'] = pd.to_datetime(df_s[['year', 'month', 'day']])\ndf_s = df_s.sort_values(by='date') \n\n\n\n\nCode\n# Plot counts of comments and submissions by day\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 10))\nax1.plot(df['date'], df['count'], linestyle='-', color = \"green\")\nax2.plot(df_s['date'], df_s['count'], linestyle='-')\n\nax1.set_xlabel('Date')\nax1.set_ylabel('Count')\nax1.set_title('Comment Count by Day (r/CollegeBasketball)', fontsize = 14)\nax1.tick_params(axis='x', rotation=45)\n\n\nax2.set_xlabel('Date')\nax2.set_ylabel('Count')\nax2.set_title('Submission Count by Day (r/CollegeBasketball)', fontsize = 14)\nax2.tick_params(axis='x', rotation=45)\n\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 17, 10, Finished, Available)\n\n\n\n\n\nGiven that the first college basketball game in this season was November 9th, 2021 these counts of comments and submissions per day make sense. We see lower comments and submissions leading up to the season. This is where the two groups deviate.\nSubmissions spike right at the beginning of the season (lots of fans critiquing or praising their new look teams perhaps?), then we see a drop off in submissions as the season settles in, followed by a rise up to the tournament in March, with a quick drop off in the middle of March as many teams are eliminated from contention for the title.\nComments, on the other hand are relatively low at the start of the season, and see a rise up until the NCAA tournament in March/April.\nThis indicates that commenting is perhaps more common later in the season as competition because more important and the NCAA tournament gets closer. Submissions are more steady perhaps because these are longer posts that mostly year long fans write.\n\n\n\n\n\nCode\n# get average word count by day\nt = (\n    submissions\n    .filter(col(\"subreddit\") == \"CollegeBasketball\") # keep only college basketball subreddit\n    .withColumn(\"word_count\", size(split(col(\"selftext\"), \"\\\\s+\"))) # get size of selftext column split by spaces (# of words)\n    .groupBy(\"year\", \"month\", \"day\")  # group by day\n    .agg(avg(\"word_count\").alias(\"avg_words\")) # average number of words per day\n)\nq = (\n    comments\n    .filter(col(\"subreddit\") == \"CollegeBasketball\")  # keep only college basketball subreddit\n    .withColumn(\"word_count\", size(split(col(\"body\"), \"\\\\s+\"))) # get size of selftext column split by spaces (# of words)\n    .groupBy(\"year\", \"month\", \"day\")  # group by day\n    .agg(avg(\"word_count\").alias(\"avg_words\")) # average number of words per day\n)\n# convert grouped data to pandas\ndf_s = t.toPandas()\ndf = q.toPandas()\ndf['date'] = pd.to_datetime(df[['year', 'month', 'day']])\ndf = df.sort_values(by='date') \n\ndf_s['date'] = pd.to_datetime(df_s[['year', 'month', 'day']])\ndf_s = df_s.sort_values(by='date') \n\n\n\n\nCode\n# Plot average word count by day\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 10))\nax1.plot(df['date'], df['avg_words'], linestyle='-', color = \"green\")\nax2.plot(df_s['date'], df_s['avg_words'], linestyle='-')\n\nax1.set_xlabel('Date')\nax1.set_ylabel('Count')\nax1.set_title('Average # of Words by Comment per Day (r/CollegeBasketball)', fontsize = 14)\nax1.tick_params(axis='x', rotation=45)\n\n\nax2.set_xlabel('Date')\nax2.set_ylabel('Count')\nax2.set_title('Average # of Words by Submission per Day (r/CollegeBasketball)', fontsize = 14)\nax2.tick_params(axis='x', rotation=45)\n\nplt.tight_layout()\nplt.show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 17, 12, Finished, Available)\n\n\n\n\n\nIn the comments dataframe we see that the average length each comment is longer before the season starts (November 1st), than during the season (November 1st - April 5th). This is likely because of the lack of posts during the preseason as we saw the in the previous graph. It does say something interesting though that the few people who do comment in the subreddit during the offseason, typically are writing longer comments.\nIn the submissions dataframe we see a different trend. The offseason has fewer or the same average words per submission, however we do see some spikes. After digging into these specific days we identified that these spikes with 600+ words per day occured on days with very few posts (<5) and one of those posts was particularly long. For example on September 2nd, 2021 one user detailed their year long simulation of which college basketball teams were the most lucky, and on October 17th, 2021 another user listed each college basketball team where the first letters of the teams names were swapped (Tar Heels = Har Teels).\nThe spike in March of 2022 for submissions is the same day as the start of the 2022 NCAA Basketball Tournament.\n\n\n\nCollege Basketball games are usually played on weeknights and all day on the weekends, lets see if the distribution of comments align with when the games are played. This heatmap shows the distribution of comments over hour of the day and day of the week. The highest density for total comments are around 9pm Tuesdays and Thursdays and around 2pm Saturdays. In general we also see weekdays having more comments after 5pm, while Sundays and Saturdays have more even distribution througout the day. This aligns with when college basketball games are typically played and indicates that the CollegeBasketball Subreddit is much more active when games are currently being played.\nNote: The plot uses Eastern Time as many games are played in EST, but there may be some issues with Central, Mountain, and Pacific time games. Since all games are played within 3 hours of eastern time we did not find this to be a fatal issue, but it must be considered during analysis.\n\n\nCode\nfrom pyspark.sql.types import TimestampType\ncomments_heat =(\n    comments \n    .filter(col(\"subreddit\")==\"CollegeBasketball\") # filter for collegebasketball subreddit\n    .withColumn(\"created_eastern\", from_utc_timestamp(\"created_utc\", \"America/New_York\").cast(TimestampType())) # create eastern time from utc time\n    .withColumn(\"day_of_week\", dayofweek(\"created_eastern\")) # get day of the week of comment\n    .withColumn(\"hour_of_day\", hour(\"created_eastern\")) # get hour of the day of comment\n    .groupBy(\"day_of_week\", \"hour_of_day\").agg(count(\"*\").alias(\"count\")) # group by day of the week and hour of the day and count total comments\n    .groupBy(\"hour_of_day\").pivot(\"day_of_week\").sum(\"count\") # pivot table for heatmap format\n    .orderBy(col(\"hour_of_day\"), ascending = False) # order hour of the day in descending order\n    .toPandas() # send to pandas\n)\nheat = comments_heat.set_index(\"hour_of_day\")\n\n\n\n\nCode\nhour_labels = [f\"{i % 12}{'am' if i < 12 else 'pm'}\" for i in range(24)] # string labels for hour of the day\nhour_labels[0] = \"12am\" # edge case \nhour_labels[12] = \"12pm\" # edge case\nhour_labels = hour_labels[::-1] # reverse order list\n# plot the heatmap\nplt.figure(figsize = (10,6))\nsns.heatmap(heat, cmap=\"Blues\",  cbar_kws={'label': '# of Comments'})\nplt.xticks(ticks=[i + 0.5 for i in range(len(heat.columns))], labels=[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"])\nplt.yticks(ticks=[i + 0.5 for i in range(len(heat))], labels=hour_labels, rotation = 0)\nplt.xlabel(\"Day of Week\", fontsize = 12)\nplt.ylabel(\"Hour of Day\", fontsize = 12)\nplt.title(\"Number of Comments by Each Hour of Each Day (EST)\", fontsize = 12)\nplt.show()\n\n\nStatementMeta(d3c1b951-094c-48e1-919d-e32bc175397b, 17, 80, Finished, Available)\n\n\n\n\n\nWork completed by Klaas van Kempen"
  }
]